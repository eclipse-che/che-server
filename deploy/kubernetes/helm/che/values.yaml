#
# Copyright (c) 2012-2018 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

# the following section is for secure registries. when uncommented, a pull secret will be created
#registry:
#  host: my-secure-private-registry.com
#  username: myUser
#  password: myPass

cheWorkspaceHttpProxy: ""
cheWorkspaceHttpsProxy: ""
cheWorkspaceNoProxy: ""
#cheWorkspacePodTolerations:
#  - key: "a.node.taint"
#    operator: "Equal"
#    value: "aValue"
#    effect: "NoExecute"
cheImage: quay.io/eclipse/che-server:next
cheImagePullPolicy: Always
cheKeycloakRealm: "che"
cheKeycloakClientId: "che-public"
#customOidcUsernameClaim: ""
#customOidcProvider: ""
#workspaceDefaultRamRequest: ""
#workspaceDefaultRamLimit: ""
#workspaceSidecarDefaultRamLimit: ""

global:
  #  This value can be passed if custom Oidc provider is used, and there is no need to deploy keycloak
  #  default (if empty) is true
  #cheDedicatedKeycloak: false
  ingressDomain: 192.168.99.100.nip.io
  ingress:
    class: "nginx"
  # See --annotations-prefix flag (https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/cli-arguments.md)
  ingressAnnotationsPrefix: "nginx."
  # options: default-host, single-host, multi-host
  serverStrategy: multi-host
  # exposure type for `serverStrategy: single-host`. options: native, gateway
  singleHostExposure: native
  # labels used for single-host gateway ConfigMaps
  singleHostGatewayLabels: app=che,component=che-gateway-config
  # Public hostname of the installed Che server. If value is omitted then it will be automatically set.
  cheHost: ""
  # Image used by endpoint watchers
  endpointWatcher:
    image: quay.io/eclipse/che-endpoint-watcher:next
  # Use internal cluster svc names to communicate between components
  useInternalClusterSVCNames: true

  ## Allows to enable and configure TLS
  tls:
    enabled: false
    ## Secret name that will be used in Che Ingresses for setting TLS up
    ## Note the helm chart does not create this secret and
    ## it MUST be pre-created in the configured Che namespace
    ## If the value is empty, then the certificate from default ingress controller will be used.
    secretName: che-tls

    ## If self-signed certificate flag is enabled
    ## then CA certificate from `tls.selfSignedCertSecretName` will be propagated to Che components' trust stores
    useSelfSignedCerts: true
    selfSignedCertSecretName: self-signed-certificate

    ## Name of the config-map with public certificates to add to Java trust store
    ## of the Che server, Keycloak and propagate into user workspaces.
    serverTrustStoreConfigMapName: ""


  ## If using git self-signed certificate is enabled
  ## then certificate from `cheGitSelfSignedCertConfigMapName` will be propagated to Che components'
  ## and provide particular configuration for Git
  useGitSelfSignedCerts: false
  cheGitSelfSignedCertConfigMapName: che-git-self-signed-cert

  gitHubClientID: ""
  gitHubClientSecret: ""
  openShiftClientID: ""
  openShiftClientSecret: ""
  openShiftOAuthEndpoint: ""
  openShiftVerifyTokenUrl: ""
  # Possible values: common, per-workspace, unique
  cheWorkspacesPVCStrategy: "common"
  pvcClaim: "1Gi"
  # Defines the storage class of Persistent Volume Claim(s) for the workspaces.
  cheWorkspacePVCStorageClassName: ""
  cheWorkspacesNamespace: "<username>-che"
  # Service account name that will be mounted to workspaces pods
  # Note that:
  # if `cheWorkspacesNamespace` doesn't contain placeholders then service account with configured name will be created by helm chart during deploying Che
  # if `cheWorkspacesNamespace` contains placeholders then Che Server creates new namespaces accordingly and ensures that configured SA exists there
  cheWorkspaceServiceAccount: "che-workspace"
  # If set, Che will bind the specified cluster role to the workspace service account when creating a workspace.
  cheWorkspaceClusterRole: ""
  workspaceIdleTimeout: "1800000"
  log:
    loggerConfig: ""
    appenderName: "plaintext"
  tracingEnabled: false
  metricsEnabled: false
  # Run Che and Che workspaces as the same non-root user
  securityContext:
    runAsUser: 1724
    fsGroup: 1724
  postgresDebugLogs: false
  # Defines the storage class of Persistent Volume Claim for Postgres database.
  chePostgresPVCStorageClassName: ""
  cheDevfileRegistryUrlFormat: "devfile-registry-%s.%s"
  chePluginRegistryUrlFormat: "plugin-registry-%s.%s"

che:
  limits: {
    # userWorkspacesRunCount
  }
  workspace: {}
    # This variable may contain a set of comma-separated key=value pairs to form the nodeSelector rule
#    podNodeSelector: "key1=value1,key2=value2"
#    devfileRegistryUrl: "https://che-devfile-registry.openshift.io/"
#    pluginBroker:
#      waitTimeoutMin: "3"
#    pluginRegistryUrl: "https://che-plugin-registry.openshift.io/v3"
  disableProbes: false
  logLevel: "INFO"

dashboard:
  image: quay.io/eclipse/che-dashboard:next
  imagePullPolicy: "Always"
  memoryRequest: 16Mi
  memoryLimit: 256Mi
  cpuRequest: 50m
  cpuLimit: 500m
  ingressPath: /dashboard

cheDevfileRegistry:
  deploy: true

chePluginRegistry:
  deploy: true

cheSinglehostGateway:
  deploy: false

prometheus:
  alertmanager:
    enabled: false
  kubeStateMetrics:
    enabled: false
  nodeExporter:
    enabled: false
  pushgateway:
    enabled: false
  rbac:
    enabled: false
  serverFiles:
    prometheus.yml:
      scrape_configs:
      - job_name: che
        static_configs:
        - targets:
          - che-host:8087

grafana:
  adminUser: admin
  adminPassword: admin
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: che
        type: prometheus
        access: proxy
        url: http://che-prometheus-server
        isDefault: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: default
        editable: true
        type: file
        folder: ''
        orgId: 1
        options:
          path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      chejvm:
        json: |
          {
            "annotations": {
              "list": [
                {
                  "builtIn": 1,
                  "datasource": "-- Grafana --",
                  "enable": true,
                  "hide": true,
                  "iconColor": "rgba(0, 211, 255, 1)",
                  "name": "Annotations & Alerts",
                  "type": "dashboard"
                }
              ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "id": 1,
            "links": [],
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "che",
                "fill": 1,
                "gridPos": {
                  "h": 9,
                  "w": 12,
                  "x": 0,
                  "y": 0
                },
                "id": 2,
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": false,
                  "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "jvm_memory_used_bytes{job=\"che\"}",
                    "format": "time_series",
                    "interval": "",
                    "intervalFactor": 1,
                    "legendFormat": "{{ id }}",
                    "refId": "A"
                  }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeShift": null,
                "title": "Che JVM Heap",
                "tooltip": {
                  "shared": true,
                  "sort": 0,
                  "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                  "buckets": null,
                  "mode": "time",
                  "name": null,
                  "show": true,
                  "values": []
                },
                "yaxes": [
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ],
                "yaxis": {
                  "align": false,
                  "alignLevel": null
                }
              }
            ],
            "refresh": false,
            "schemaVersion": 16,
            "style": "dark",
            "tags": [],
            "templating": {
              "list": []
            },
            "timepicker": {
              "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
              ],
              "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
              ]
            },
            "timezone": "",
            "title": "Che JVM Heap",
            "uid": "IkmWvLLmk",
            "version": 1
          }
